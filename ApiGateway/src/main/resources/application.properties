server.port=8082
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka


# add routing for microservice endpoints

#status check users api
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://users-ws
spring.cloud.gateway.routes[0].predicates[0]=Path=/users-ws/users/sc
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[0].filters[2].name=AuthorizationHeaderFilter

#create user
spring.cloud.gateway.routes[1].id=users-create-user
spring.cloud.gateway.routes[1].uri=lb://users-ws
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-ws/users/
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

#login user
spring.cloud.gateway.routes[2].id=users-login
spring.cloud.gateway.routes[2].uri=lb://users-ws
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-ws/users/login
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

#get, update, and delete user
spring.cloud.gateway.routes[3].id=users-get-update-delete
spring.cloud.gateway.routes[3].uri=lb://users-ws
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-ws/users/
spring.cloud.gateway.routes[3].predicates[1]=Method=GET, PUT, DELETE
spring.cloud.gateway.routes[3].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[3].filters[2].name=AuthorizationHeaderFilter

spring.cloud.gateway.routes[4].id=albums-get-user
spring.cloud.gateway.routes[4].uri=lb://albums-ws
spring.cloud.gateway.routes[4].predicates[0]=Path=/albums-ws/albums/user/{id}
spring.cloud.gateway.routes[4].predicates[1]=Method=GET
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/albums-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[5].id=albums-sc
spring.cloud.gateway.routes[5].uri=lb://albums-ws
spring.cloud.gateway.routes[5].predicates[0]=Path=/albums-ws/albums/sc
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/albums-ws/(?<segment>.*), /$\{segment}







management.endpoints.web.exposure.include=beans,health,routes,httptrace



# template always works for delete in recogniziing gateway filter factory
# spring.cloud.gateway.routes[3].id=users-delete
# spring.cloud.gateway.routes[3].uri=lb://users-ws
# spring.cloud.gateway.routes[3].predicates[0]=Path=/users-ws/users/
# spring.cloud.gateway.routes[3].predicates[1]=Method=DELETE
# spring.cloud.gateway.routes[3].predicates[2]=Header=Authorization, Bearer (.*)
# spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
# spring.cloud.gateway.routes[3].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
# spring.cloud.gateway.routes[3].filters[2].name=AuthorizationHeaderFilter







# spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/users/sc, /users/sc
#                                         external:/users-ws/users/sc -> internal: /users/sc   





# spring.cloud.gateway.routes[2].id=accounts-status-check
# spring.cloud.gateway.routes[2].uri=lb://ACCOUNTS-WS
# spring.cloud.gateway.routes[2].predicates[0]=Path=/accounts/status/check
# spring.cloud.gateway.routes[2].predicates[1]=Method=GET


#  hard coding the microservice name in the url
# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true
